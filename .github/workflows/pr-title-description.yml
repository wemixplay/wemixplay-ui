name: Auto Update PR Title and Description

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  update-pr:
    runs-on: self-hosted
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Get commit messages
        id: get-commits
        run: |
          git fetch origin
          BASE_COMMIT=${{ github.event.pull_request.base.sha }}
          HEAD_COMMIT=${{ github.event.pull_request.head.sha }}
          echo "Base Commit: $BASE_COMMIT"
          echo "Head Commit: $HEAD_COMMIT"
          # 임시 파일에 커밋 메시지 저장
          git log --format=%B $BASE_COMMIT..$HEAD_COMMIT | sed '/^$/d' | sed 's/^/- /' > commits.txt
          # 파일 내용을 변수에 저장
          COMMITS=$(cat commits.txt)
          # GitHub output으로 설정
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Update PR title and description
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_BRANCH=$(echo "${{ github.event.pull_request.head.ref }}")
          BASE_BRANCH=$(echo "${{ github.event.pull_request.base.ref }}")
          PR_NUMBER=${{ github.event.pull_request.number }}    
          REPO=${{ github.repository }}

          if [ "$BASE_BRANCH" = "storybook" ]; then
            TITLE="스토리북 최신화"
          elif [ "$BASE_BRANCH" = "main" ]; then
            TITLE="정식 버전 소스 최신화"
          else
            exit 0
          fi

          # 직접 outputs에서 커밋 메시지 가져오기
          DESCRIPTION=$(echo -e "## 커밋 내역\n\n${{ steps.get-commits.outputs.commits }}")

          curl -X PATCH \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/$REPO/pulls/$PR_NUMBER \
            -d "{\"title\":\"$TITLE\", \"body\":\"$DESCRIPTION\"}"