.radio-box {
  /**
  * position: relative; 를 바꾸게 되면 사이드이펙트가 날 수 있음으로
  * 필요시 상위 element에 position 속성을 주시기 바랍니다.
  */
  position: relative;
  display: inline-flex;
  align-items: center;
  cursor: pointer;

  // font-size, font-weight, line-height, font-feature-settings, font-family, color는 .text로 전달되어 지기 때문에
  // 따로 .text에 위의 스타일 속성들을 정의하지 않으셔도 됩니다.
  @include label-02-normal-r;

  &.readonly {
    cursor: not-allowed;
    pointer-events: none;
  }

  &.disabled {
    cursor: not-allowed;
    opacity: $color-global-opacity-43;

    .ico-check { // input이 disabled 경우의 .ico-check에 대한 정의
      .icon {
        border: 1px solid var(--wp-semantic-line-normal-normal);
      }
    }
  }

  &:not(.disabled) {
    &:hover {
      @include hover {
        .ico-check {
          &::before {
            opacity: $color-global-opacity-5;
          }
        }
      }
    }

    &:focus {
      .ico-check {
        &::before {
          opacity: $color-global-opacity-8;
        }
      }
    }

    &:active {
      .ico-check {
        &::before {
          opacity: $color-global-opacity-12;
        }
      }
    }
  }

  .ico-check {
    position: relative;
    display: flex;
    width: 32px;
    height: 32px;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    margin-right: 10px;
    background-color: transparent;
    transition: background-color 0.15s, border 0.15s;

    /*
      focus, active, hover 상태일 경우 체크아이콘의 interaction 영역에 표시되는 원형 배경색상
    */
    &::before {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: $rd-circle;
      background: var(--wp-semantic-label-normal);
      content: "";
      opacity: 0;
      transition: opacity 0.15s;
    }

    .icon {
      position: relative;
      width: 20px;
      height: 20px;
      border: 1.5px solid var(--wp-semantic-line-normal-normal);
      border-radius: 50%;

      /*
       * ::before checked아이콘의 색상부분
       * ::after checked아이콘의 가운데 원형
      */
      &::before {
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0;
        height: 0;
        border-radius: $rd-circle;
        background-color: var(--wp-semantic-primary-normal);
        content: "";
        transform: translate(-50%, -50%);
        transition: width, height, 0.3s;
      }

      &::after {
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0;
        height: 0;
        border-radius: $rd-circle;
        background-color: white;
        content: "";
        transform: translate(-50%, -50%);
        transition: width, height, 0.3s;
      }
    }
  }

  input {
    display: none;

    &:checked {
      ~ .ico-check {
        .icon {
          border: 0;

          &::before {
            width: 100%;
            height: 100%;
          }

          &::after {
            width: 8px;
            height: 8px;
          }
        }

        &::after {
          transform: translateX(-50%) translateY(-50%) scale(1);
        }
      }
    }
  }

  .text {
    /**
    * 상위 선택자인 .checkbox의 스타일을 상속 받습니다.
    */
    color: inherit;
    font-family: inherit;
    font-feature-settings: inherit;
    font-size: inherit;
    font-weight: inherit;
    line-height: inherit;
    user-select: none;
  }

  label {
    /**
    * label은 레이아웃에 영향을 받지 않는 마크업 구조로
    * label을 클릭 했을시 하위 input에 대한 상태를 변경해주기 위해서만 존재하기 때문에
    * display: contents; 속성을 주입하였습니다.
    */
    display: contents;
    cursor: inherit;

    /**
    * label이 display: contents;이기 때문에 클릭 이벤트 또한 안먹는 구간이 있을 수 있으므로
    * 클릭 이벤트는 먹을 수 있도록 가상 선택자를 활용하였습니다.
    */
    &::after {
      position: absolute;
      z-index: 1;
      top: 0;
      left: 0;
      display: block;
      width: 100%;
      height: 100%;
      content: "";
    }
  }

  &.small {
    .ico-check {
      width: 28px;
      height: 28px;

      .icon {
        width: 16px;
        height: 16px;
      }
    }

    input {
      &:checked {
        ~ .ico-check {
          .icon {
            &::after {
              width: 6px;
              height: 6px;
            }
          }
        }
      }
    }
  }
}
