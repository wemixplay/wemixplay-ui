@use "sass:list";

/* stylelint-disable font-family-no-missing-generic-family-keyword */
/* stylelint-disable order/properties-order */
/* stylelint-disable scss/no-duplicate-mixins */

@mixin scroll($width: 2px, $thumb:  var(--semantic-fill-strong), $track:var(--semantic-scroll)) {
  $scrollbar-thumb-width: $width;
  $scrollbar-thumb-color: $thumb;
  $scrollbar-track-color: $track;

  &::-webkit-scrollbar {
    position: absolute;
    width: $scrollbar-thumb-width;
    height: $scrollbar-thumb-width;

    &-track {
      background-color: $scrollbar-track-color;
    }

    &-thumb {
      background-color: $scrollbar-thumb-color;
    }

    &-track,
    &-thumb {
      border-radius: $rd-12;
    }
  }
}

@mixin ellipsis($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    word-break: break-all;
  } @else {
    display: block;
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    white-space: initial;
  }
}

@mixin a11y {
  position: absolute !important;
  display: block !important;
  overflow: hidden !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  border: 0 !important;
  margin: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
  clip-path: inset(50%) !important;
  word-break: initial !important;
  word-wrap: initial !important;
}

@mixin skeleton-basic-animation($duration: 5s) {
  background: var(--semantic-background-elevated-alternative);
  animation: skeleton-blank linear $duration infinite;
}

@mixin word-break {
  word-break: keep-all;
  overflow-wrap: break-word;
}

@mixin font-size($size: 12, $base: 16) {
  font-size: $size + px;
  font-size: calc($size / $base) * 1rem;
}

@mixin line-height($height: 12, $base: 16) {
  line-height: $height + px;
  line-height: calc($height / $base) * 1rem;
}

@mixin typo($size: null, $height: null, $base: 16) {
  @if $size {
    font-size: $size + px;
    font-size: calc($size / $base) * 1rem;
  }

  @if $height {
    line-height: $height + px;
    line-height: calc($height / $base) * 1rem;
  }
}

@mixin mobile-status {
  @media (hover: hover) and (pointer: fine) {
    @content;
  }
}

@mixin hover {
  @media (hover: hover) and (pointer: fine) {
    @content;
  }
}

@mixin breakpoint-360 {
  @media (min-width: 360px) {
    @content;
  }
}

@mixin breakpoint-375 {
  @media (min-width: 375px) {
    @content;
  }
}

/* 5120 NFT이미지 대응  */

@mixin breakpoint-512 {
  @media (min-width: 512px) {
    @content;
  }
}

/* 768 미만은 모바일  */
@mixin breakpoint-768 {
  @media (min-width: 768px) {
    @content;
  }
}

/* 1024 ~ */
@mixin breakpoint-1024 {
  @media (min-width: 1024px) {
    @content;
  }
}

/* 1280 ~ */
@mixin breakpoint-1280 {
  @media (min-width: 1280px) {
    @content;
  }
}

/* 1440 ~ */
@mixin breakpoint-1440 {
  @media (min-width: 1440px) {
    @content;
  }
}

/* 1600 ~ */
@mixin breakpoint-1600 {
  @media (min-width: 1600px) {
    @content;
  }
}

/* 1920 ~ */
@mixin breakpoint-1920 {
  @media (min-width: 1920px) {
    @content;
  }
}

@mixin skeleton($width : "", $height: "") {
  @if $width != "" {
    width: $width;
  }

  @if $height != "" {
    height: $height;
  }

  // font-size: 0 !important;
  border-radius: $rd-2;
  color: transparent !important;
  animation: skeleton-blank infinite 3s !important;
  overflow: hidden;
  user-select: none !important;
  pointer-events: none !important;
}

// @include transition((properties), duration, function, delay);
@mixin transition(
  $properties: all, // 적용하려는 트랜지션 속성 목록
  $duration: 0.3s, // 트랜지션 시간
  $timing-function: cubic-bezier(0.45, 1.45, 0.8, 1), // timing function (default : nft origin 에 적용된 타이밍 함수)
  $delay: 0s, // 지연시간
) {
  $transitions: ();

  @if type-of($properties) == "list" {
    // $properties 값이 2개 이상의 리스트일 경우, 각 속성별로 트랜지션 적용
    @each $prop in $properties {
      $transitions: list.append($transitions, #{$prop} $duration $timing-function, comma);
    }
  } @else {
    // $properties 값이 1개일 경우,
    $transitions: #{$properties} $duration $timing-function;
  }

  transition: $transitions;
}
