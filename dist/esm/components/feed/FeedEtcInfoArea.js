"use client";
import e,{useCallback as t}from"react";import s from"./FeedEtcInfoArea.module.scss.js";import n from"../../assets/svgs/icon-comment.svg.js";import o from"../../assets/svgs/icon-copy.svg.js";import a from"../../assets/svgs/icon-thumbup-outline.svg.js";import{toFormatterByInt as c}from"../../utils/valueParserUtils.js";import{makeCxFunc as l}from"../../utils/forReactUtils.js";const m=l(s);var r=s=>{let{className:l="",commentCount:r,likeCount:i,isMyClick:p,onShareBtnClick:u,onLikeBtnClick:k,onCommentBtnClick:v}=s;const E=t((e=>{e.stopPropagation(),u&&u(e)}),[u]),f=t((e=>{e.stopPropagation(),v&&v(e)}),[v]),b=t((e=>{e.stopPropagation(),k&&k(e)}),[k]);return e.createElement("div",{className:m(l,"feed-comments")},e.createElement("button",{type:"button",className:m("btn-comment",{"has-click-event":v}),onClick:f},e.createElement("i",{className:m("icon")},e.createElement(n,null)),e.createElement("span",{className:m("count")},c(r,1))),e.createElement("button",{type:"button",className:m("btn-like",{active:p,"has-click-event":k}),onClick:b},e.createElement("span",{className:m("icon")},e.createElement(a,null)),e.createElement("span",{className:m("count")},c(i,1))),!!u&&e.createElement("button",{type:"button",className:m("btn-share","has-click-event"),onClick:E},e.createElement(o,null)))};export{r as default};
