'use client';
import e,{forwardRef as t,useRef as r,useState as n,useMemo as a,useCallback as l,useEffect as c,useImperativeHandle as u}from"react";import{makeCxFunc as o}from"../../../utils/forReactUtils.js";import{commaWithValue as i,commaStrToNumber as m}from"../../../utils/valueParserUtils.js";import s from"./MultiRangeInput.module.scss.js";const d=o(s),p=t(((t,o)=>{const{className:s="",value:p,name:h,min:g,max:v,step:f=1,thumbSize:E=26,sliderHeight:b=6,thumbBorderColor:x,thumbColor:y,trackColor:M,rangeColor:N,showTextInput:C=!0,handleChange:w,onChange:I}=t,k=r([g,v]),U=r(null),j=r(null),B=r(null),R=r(null),[T,z]=n([g,v]),D=a((()=>T.map((e=>(e-g)/(v-g)*100))),[T,g,v]),F=l((()=>{B.current&&R.current&&(B.current.value=i(T[0]),R.current.value=i(T[1]),B.current.style.width="".concat(B.current.scrollWidth,"px"),R.current.style.width="".concat(R.current.scrollWidth,"px"))}),[T]),K=l((e=>{"Enter"!==e.key||e.nativeEvent.isComposing||(B.current.blur(),R.current.blur())}),[]),L=l((function(e,t){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(C&&(!B.current||!R.current))return;const{value:n}=t.target;if("left"===e){let e=Math.min(m(n),T[1]-f);e=e>g?e:g,z([e,T[1]]),r&&w&&w([e,T[1]],h),B.current.value=i(e)}else{let e=Math.max(m(n),T[0]+f);e=e<=v?e:v,z([T[0],e]),r&&w&&w([T[0],e],h),R.current.value=i(e)}I&&I(t),F()}),[I,C,F,w,h,T,f,g,v]),V=l((()=>{T.some(((e,t)=>e!==k.current[t]))&&(k.current=[...T],w&&w(T,h))}),[T,h,w]);return c((()=>{F()}),[F]),c((()=>{void 0!==p&&(z(p),k.current=[...p])}),[p]),u(o,(()=>({focus:U.current.focus}))),e.createElement("div",{className:d("range-input",s,{disabled:g===v}),style:{"--mri-thumb-size":"".concat(E,"px"),"--mri-slider-height":"".concat(b,"px"),"--mri-thumb-border-color":x,"--mri-thumb-color":y,"--mri-track-color":M,"--mri-range-color":N}},e.createElement("div",{className:d("range-area")},e.createElement("div",null,e.createElement("input",{ref:U,type:"range",value:T[0],min:g,max:v,step:f,onChange:e=>L("left",e),onMouseUp:V,onMouseLeave:V,onTouchEnd:V}),e.createElement("input",{ref:j,type:"range",value:T[1],id:"input-right",min:g,max:v,step:f,onChange:e=>L("right",e),onMouseUp:V,onMouseLeave:V,onTouchEnd:V}),e.createElement("div",{className:d("slider")},e.createElement("div",{className:d("track")}),e.createElement("div",{className:d("range"),style:{left:"".concat(D[0],"%"),right:"".concat(100-D[1],"%")}}),e.createElement("div",{className:d("thumb","left"),style:{left:"".concat(D[0],"%")}}),e.createElement("div",{className:d("thumb","right"),style:{right:"".concat(100-D[1],"%")}})))),C&&e.createElement("div",{className:d("range-input")},e.createElement("div",{className:d("input-box")},e.createElement("label",{htmlFor:"rangeMinInput"},"min"),e.createElement("input",{ref:B,type:"text",inputMode:"numeric",defaultValue:T[0],disabled:g===v,onBlur:e=>L("left",e,!0),onKeyDown:K})),e.createElement("div",{className:d("input-box")},e.createElement("label",{htmlFor:"rangeMaxInput"},"max"),e.createElement("input",{ref:R,type:"text",inputMode:"numeric",defaultValue:T[1],disabled:g===v,onBlur:e=>L("right",e,!0),onKeyDown:K}))))}));p.displayName="MultiRangeInput";var h=p;export{h as default};
