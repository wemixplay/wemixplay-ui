import e from"decimal.js";import{sanitize as a}from"isomorphic-dompurify";import t from'./../ext/lodash/isNaN.js';import n from'./../ext/lodash/isNumber.js';const r=(e,a,t)=>{let n="".concat(e);if(n.length>=t)return n;for(;n.length<t;)n=a+n;return n},l=e=>{const a=e.split(".");return a[0]=a[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),a},o=[{value:1,symbol:""},{value:1e3,symbol:"K"},{value:1e6,symbol:"M"},{value:1e9,symbol:"B"},{value:1e12,symbol:"T"}],s=function(a,r){let l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:o;if(!n(a)||t(a))return"0";let s=0;for(s=l.length-1;s>0&&!(Math.abs(a)>=l[s].value);s-=1);return"".concat(new e(a||0).div(l[s].value).toFixed(r,e.ROUND_DOWN).replace(/\.0+$|(\.[0-9]*[1-9])0+$/,"$1")).concat(l[s].symbol)},c=e=>Number(e.replace(/,/gi,"")),p=e=>{if((e=String(null!=e?e:0)).match(/[^0-9,.]/g))return e;if(e){const a=e.split(".");return a[0]=a[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),a.join(".")}return"0"},i=e=>e.replace(/\[LINEBREAK\]/g,"").replace(/\s+/g,""),d=e=>{const a={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'","&#x2F;":"/","&#x60;":"`","&#x3D;":"="};let t=e,n="";for(;t!==n;)n=t,t=t.replace(/&[#\w]+;/g,(e=>a[e]||e));return t},m=e=>{let t=d(e);return t=a(t,{ALLOWED_TAGS:[],KEEP_CONTENT:!0}),console.info("convertStr >>",t),t=t.replace(/WP@\[(.*?)\]\((\d+)\)/g,'<span class="mention complete-mention" data-id="$2" data-name="$1">@$1</span>'),t=t.replace(/WP#\[(.*?)\]\((\d+)\)/g,'<span class="hash complete-hash" data-id="$2" data-name="$1">#$1</span>'),t=t.replace(/\[([^\]]+)\]\(([^)]+)\)\[:(target="_blank")\]/g,'<a href="$2" target="_blank">$1</a>'),t=t.replace(/\[LINEBREAK\]/g,"<br />"),t},g=e=>{let a=e.replace(/&nbsp;/g," ");a=a.replace(/<div>/g,"<br />").replace(/<\/div>/g,""),a=a.replace(/<br\s*\/?>/gi,"[LINEBREAK]").replace(/\n/g,"[LINEBREAK]"),a=a.replace(/<span[^>]*\bclass="mention complete-mention\b[^>]*\bdata-id="(\d+)"[^>]*(?:\s+data-[^>]*="[^"]*")*[^>]*>@([^<]+)<\/span>/g,((e,a,t)=>"WP@[".concat(t.trim(),"](").concat(a.trim(),")"))).replace(/<span[^>]*\bclass="mention unknown-mention\b[^>]*>([^<]*)<\/span>/g,"$1").replace(/<span[^>]*\bclass="mention will-mention\b[^>]*>(?:\s+data-[^>]*="[^"]*")?[^>]*>@([^<]+)<\/span>/g,"@$1"),a=a.replace(/<span[^>]*\bclass="hash complete-hash\b[^>]*\bdata-id="(\d+)"[^>]*(?:\s+data-[^>]*="[^"]*")*[^>]*>#([^<]+)<\/span>/g,((e,a,t)=>"WP#[".concat(t.trim(),"](").concat(a.trim(),")"))).replace(/<span[^>]*\bclass="hash\b[^>]*\bdata-id="(\d+)"[^>]*(?:\s+data-[^>]*="[^"]*")*[^>]*>#([^<]+)<\/span>/g,"WP#[$2]($1)"),a=a.replace(/<a href="(.*?)"(.*?)>(.*?)<\/a>/g,'[$3]($1)[:target="_blank"]');if(/<\/?[^>]+(>|$)/.test(a)){const e=document.createElement("div");e.innerHTML=a,a=e.textContent}return a},u=e=>{const a=e.split(".");return[a[0],a[1]]},b=e=>{"number"==typeof e&&(e=String(e));const[a,t]=u(e),n=t?".".concat(t):"",r=a.replace(/\B(?=(\d{3})+(?!\d))/g,",");return"".concat(r).concat(n)},h=(e,a)=>parseFloat(String(Math.round(100*e)/100)).toFixed(a);export{c as commaStrToNumber,p as commaWithValue,g as convertHtmlToMarkdownStr,m as convertMarkdownToHtmlStr,d as decodeHtmlEntities,b as formatNumberValueWithComma,h as getFloatFixed,l as makeParts,r as pad,i as removeSpaceAndLineBreak,u as splitNumberStringByComma,s as toFormatterByInt};
