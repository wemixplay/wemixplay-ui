import{__exports as t}from"../../../../_virtual/index2.js";import"../../../universalify/index.js";import{__exports as s}from"../../../../_virtual/index.js";import"../fs/index.js";import{m as i}from"../mkdirs/index.js";import{s as a}from"./symlink-paths.js";import{s as n}from"./symlink-type.js";import{p as r}from"../path-exists/index.js";import{s as m}from"../util/stat.js";import o from"path";const e=t.fromPromise,c=o,y=s,{mkdirs:l,mkdirsSync:p}=i,{symlinkPaths:f,symlinkPathsSync:k}=a,{symlinkType:d,symlinkTypeSync:S}=n,{pathExists:x}=r,{areIdentical:u}=m;var j={createSymlink:e((async function(t,s,i){let a;try{a=await y.lstat(s)}catch{}if(a&&a.isSymbolicLink()){const[i,a]=await Promise.all([y.stat(t),y.stat(s)]);if(u(i,a))return}const n=await f(t,s);t=n.toDst;const r=await d(n.toCwd,i),m=c.dirname(s);return await x(m)||await l(m),y.symlink(t,s,r)})),createSymlinkSync:function(t,s,i){let a;try{a=y.lstatSync(s)}catch{}if(a&&a.isSymbolicLink()){const i=y.statSync(t),a=y.statSync(s);if(u(i,a))return}const n=k(t,s);t=n.toDst,i=S(n.toCwd,i);const r=c.dirname(s);return y.existsSync(r)||p(r),y.symlinkSync(t,s,i)}};export{j as s};
