import{g as r}from"../../../graceful-fs/graceful-fs.js";import{m as e}from"../mkdirs/index.js";import{u as n}from"../util/utimes.js";import{s as t}from"../util/stat.js";import i from"path";const o=r,c=i,s=e.mkdirsSync,f=n.utimesMillisSync,u=t;function a(r,e,n,t){const i=(t.dereference?o.statSync:o.lstatSync)(e);if(i.isDirectory())return function(r,e,n,t,i){return e?l(n,t,i):function(r,e,n,t){return o.mkdirSync(n),l(e,n,t),y(n,r)}(r.mode,n,t,i)}(i,r,e,n,t);if(i.isFile()||i.isCharacterDevice()||i.isBlockDevice())return function(r,e,n,t,i){return e?function(r,e,n,t){if(t.overwrite)return o.unlinkSync(n),m(r,e,n,t);if(t.errorOnExist)throw new Error(`'${n}' already exists`)}(r,n,t,i):m(r,n,t,i)}(i,r,e,n,t);if(i.isSymbolicLink())return function(r,e,n,t){let i=o.readlinkSync(e);t.dereference&&(i=c.resolve(process.cwd(),i));if(r){let r;try{r=o.readlinkSync(n)}catch(r){if("EINVAL"===r.code||"UNKNOWN"===r.code)return o.symlinkSync(i,n);throw r}if(t.dereference&&(r=c.resolve(process.cwd(),r)),u.isSrcSubdir(i,r))throw new Error(`Cannot copy '${i}' to a subdirectory of itself, '${r}'.`);if(u.isSrcSubdir(r,i))throw new Error(`Cannot overwrite '${r}' with '${i}'.`);return function(r,e){return o.unlinkSync(e),o.symlinkSync(r,e)}(i,n)}return o.symlinkSync(i,n)}(r,e,n,t);if(i.isSocket())throw new Error(`Cannot copy a socket file: ${e}`);if(i.isFIFO())throw new Error(`Cannot copy a FIFO pipe: ${e}`);throw new Error(`Unknown file: ${e}`)}function m(r,e,n,t){return o.copyFileSync(e,n),t.preserveTimestamps&&function(r,e,n){(function(r){return!(128&r)})(r)&&function(r,e){y(r,128|e)}(n,r);(function(r,e){const n=o.statSync(r);f(e,n.atime,n.mtime)})(e,n)}(r.mode,e,n),y(n,r.mode)}function y(r,e){return o.chmodSync(r,e)}function l(r,e,n){o.readdirSync(r).forEach((t=>function(r,e,n,t){const i=c.join(e,r),o=c.join(n,r);if(t.filter&&!t.filter(i,o))return;const{destStat:s}=u.checkPathsSync(i,o,"copy",t);return a(s,i,o,t)}(t,r,e,n)))}var d=function(r,e,n){"function"==typeof n&&(n={filter:n}),(n=n||{}).clobber=!("clobber"in n)||!!n.clobber,n.overwrite="overwrite"in n?!!n.overwrite:n.clobber,n.preserveTimestamps&&"ia32"===process.arch&&process.emitWarning("Using the preserveTimestamps option in 32-bit node is not recommended;\n\n\tsee https://github.com/jprichardson/node-fs-extra/issues/269","Warning","fs-extra-WARN0002");const{srcStat:t,destStat:i}=u.checkPathsSync(r,e,"copy",n);if(u.checkParentPathsSync(r,t,e,"copy"),n.filter&&!n.filter(r,e))return;const f=c.dirname(e);return o.existsSync(f)||s(f),a(i,r,e,n)};export{d as c};
