import{__exports as t}from"../../../../_virtual/index.js";import"../fs/index.js";import{c as r}from"../copy/index.js";import{r as a}from"../remove/index.js";import{m as s}from"../mkdirs/index.js";import{p as i}from"../path-exists/index.js";import{s as e}from"../util/stat.js";import o from"path";const n=t,m=o,{copy:c}=r,{remove:p}=a,{mkdirp:f}=s,{pathExists:w}=i,d=e;var x=async function(t,r,a={}){const s=a.overwrite||a.clobber||!1,{srcStat:i,isChangingCase:e=!1}=await d.checkPaths(t,r,"move",a);await d.checkParentPaths(t,i,r,"move");const o=m.dirname(r);return m.parse(o).root!==o&&await f(o),async function(t,r,a,s){if(!s)if(a)await p(r);else if(await w(r))throw new Error("dest already exists.");try{await n.rename(t,r)}catch(s){if("EXDEV"!==s.code)throw s;await async function(t,r,a){const s={overwrite:a,errorOnExist:!0,preserveTimestamps:!0};return await c(t,r,s),p(t)}(t,r,a)}}(t,r,s,e)};export{x as m};
