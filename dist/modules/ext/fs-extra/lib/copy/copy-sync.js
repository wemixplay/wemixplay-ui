"use strict";var r=require("../../../graceful-fs/graceful-fs.js"),e=require("../mkdirs/index.js"),n=require("../util/utimes.js"),t=require("../util/stat.js"),i=require("path");const c=r.gracefulFs,o=i,s=e.mkdirs.mkdirsSync,u=n.utimes.utimesMillisSync,f=t.stat;function a(r,e,n,t){const i=(t.dereference?c.statSync:c.lstatSync)(e);if(i.isDirectory())return function(r,e,n,t,i){return e?d(n,t,i):function(r,e,n,t){return c.mkdirSync(n),d(e,n,t),l(n,r)}(r.mode,n,t,i)}(i,r,e,n,t);if(i.isFile()||i.isCharacterDevice()||i.isBlockDevice())return function(r,e,n,t,i){return e?function(r,e,n,t){if(t.overwrite)return c.unlinkSync(n),y(r,e,n,t);if(t.errorOnExist)throw new Error(`'${n}' already exists`)}(r,n,t,i):y(r,n,t,i)}(i,r,e,n,t);if(i.isSymbolicLink())return function(r,e,n,t){let i=c.readlinkSync(e);t.dereference&&(i=o.resolve(process.cwd(),i));if(r){let r;try{r=c.readlinkSync(n)}catch(r){if("EINVAL"===r.code||"UNKNOWN"===r.code)return c.symlinkSync(i,n);throw r}if(t.dereference&&(r=o.resolve(process.cwd(),r)),f.isSrcSubdir(i,r))throw new Error(`Cannot copy '${i}' to a subdirectory of itself, '${r}'.`);if(f.isSrcSubdir(r,i))throw new Error(`Cannot overwrite '${r}' with '${i}'.`);return function(r,e){return c.unlinkSync(e),c.symlinkSync(r,e)}(i,n)}return c.symlinkSync(i,n)}(r,e,n,t);if(i.isSocket())throw new Error(`Cannot copy a socket file: ${e}`);if(i.isFIFO())throw new Error(`Cannot copy a FIFO pipe: ${e}`);throw new Error(`Unknown file: ${e}`)}function y(r,e,n,t){return c.copyFileSync(e,n),t.preserveTimestamps&&function(r,e,n){(function(r){return!(128&r)})(r)&&function(r,e){l(r,128|e)}(n,r);(function(r,e){const n=c.statSync(r);u(e,n.atime,n.mtime)})(e,n)}(r.mode,e,n),l(n,r.mode)}function l(r,e){return c.chmodSync(r,e)}function d(r,e,n){c.readdirSync(r).forEach((t=>function(r,e,n,t){const i=o.join(e,r),c=o.join(n,r);if(t.filter&&!t.filter(i,c))return;const{destStat:s}=f.checkPathsSync(i,c,"copy",t);return a(s,i,c,t)}(t,r,e,n)))}var S=function(r,e,n){"function"==typeof n&&(n={filter:n}),(n=n||{}).clobber=!("clobber"in n)||!!n.clobber,n.overwrite="overwrite"in n?!!n.overwrite:n.clobber,n.preserveTimestamps&&"ia32"===process.arch&&process.emitWarning("Using the preserveTimestamps option in 32-bit node is not recommended;\n\n\tsee https://github.com/jprichardson/node-fs-extra/issues/269","Warning","fs-extra-WARN0002");const{srcStat:t,destStat:i}=f.checkPathsSync(r,e,"copy",n);if(f.checkParentPathsSync(r,t,e,"copy"),n.filter&&!n.filter(r,e))return;const u=o.dirname(e);return c.existsSync(u)||s(u),a(i,r,e,n)};exports.copySync_1=S;
